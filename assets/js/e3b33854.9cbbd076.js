"use strict";(self.webpackChunkkrateo_v_2_docs=self.webpackChunkkrateo_v_2_docs||[]).push([[8],{7700:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var a=n(7624),s=n(2172);const i={sidebar_label:"Krateo Composable Portal",description:"Find out more about Krateo Composable Portal (KCP) concepts"},o="What is Krateo Composable Portal (KCP)?",r={id:"key-concepts/kcp",title:"What is Krateo Composable Portal (KCP)?",description:"Find out more about Krateo Composable Portal (KCP) concepts",source:"@site/docs/20-key-concepts/20-kcp.md",sourceDirName:"20-key-concepts",slug:"/key-concepts/kcp",permalink:"/key-concepts/kcp",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_label:"Krateo Composable Portal",description:"Find out more about Krateo Composable Portal (KCP) concepts"},sidebar:"tutorialSidebar",previous:{title:"Krateo Composable Operations",permalink:"/key-concepts/kco"},next:{title:"Krateo Composable FinOps",permalink:"/key-concepts/kcf"}},c={},l=[{value:"krateo-frontend",id:"krateo-frontend",level:2},{value:"bff",id:"bff",level:2},{value:"backend",id:"backend",level:2},{value:"authn",id:"authn",level:2},{value:"Basic authentication",id:"basic-authentication",level:3},{value:"LDAP authentication",id:"ldap-authentication",level:3},{value:"Oauth authentication",id:"oauth-authentication",level:3}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"what-is-krateo-composable-portal-kcp",children:"What is Krateo Composable Portal (KCP)?"}),"\n",(0,a.jsx)(t.p,{children:"Our concept of a Krateo Composable Portal refers to a portal that is built using a modular architecture. This design allows for the flexible combination of different functionalities or services to create a tailored experience for users. In the context of Krateo - a platform operations solution- the Composable Portal could serve as a central hub for managing, integrating, and deploying various platform services with a focus on customizability and scalability."}),"\n",(0,a.jsx)(t.p,{children:"Our composable portal includes:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Modular Design: Enables the addition, removal, or update of features and services without changing a single line of code."}),"\n",(0,a.jsx)(t.li,{children:"User-Centric Interface: Offers a user-friendly interface for both administrators and end-users to interact with the platform's capabilities."}),"\n",(0,a.jsx)(t.li,{children:"Integration Capabilities: Facilitates the integration with other services, APIs, and tools to extend the portal's functionality."}),"\n",(0,a.jsx)(t.li,{children:"Customization and Flexibility: Allows users to customize the portal to meet specific operational needs, reflecting the unique workflows and processes of their organization."}),"\n",(0,a.jsx)(t.li,{children:"Scalability: Designed to scale with the organization's needs, supporting an increasing number of services, users, or data volumes efficiently."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"It is important to note that Krateo does not have its own separate backend, but rather relies entirely on Kubernetes. To clarify, Krateo is an extension of Kubernetes and is not a standalone software that runs on Kubernetes. Krateo's Composable Portal serves as a graphical interface to interact with Kubernetes."}),"\n",(0,a.jsx)(t.p,{children:"KCP consists of the following features:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"krateo-frontend"}),"\n",(0,a.jsx)(t.li,{children:"authn"}),"\n",(0,a.jsx)(t.li,{children:"bff"}),"\n",(0,a.jsx)(t.li,{children:"backend"}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"krateo-frontend",children:"krateo-frontend"}),"\n",(0,a.jsxs)(t.p,{children:["Our frontend (",(0,a.jsx)(t.a,{href:"https://github.com/krateoplatformops/krateo-frontend",children:"https://github.com/krateoplatformops/krateo-frontend"}),") can be defined as a data-driven meta-framework, but what does that mean exactly? Essentially, we created an architecture that ensures a consistent user experience by design. This is achieved by pre-packaging graphic elements and layouts that can be used and composed to build the portal pages."]}),"\n",(0,a.jsx)(t.p,{children:"It's important to note that the Krateo portal should not be seen as a black box, but rather as a central point for collecting valuable information for the platform's users, which is distributed across different systems."}),"\n",(0,a.jsx)(t.p,{children:"Another important requirement is that the portal must be easily extendable without requiring any coding. All efforts should be focused on understanding how to display services in the catalog, rather than on maintaining forms for collecting information."}),"\n",(0,a.jsx)(t.p,{children:"In summary, the Krateo frontend queries the backend (Kubernetes) via the backend for the frontend to know which layouts and graphic elements it must process with client-side runtime rendering."}),"\n",(0,a.jsx)(t.h2,{id:"bff",children:"bff"}),"\n",(0,a.jsx)(t.p,{children:"A critical architectural choice behind Krateo is that there must be no channel-specific logic querying the backend. In other words, what is displayed and implemented via the portal must be exactly reproducible via the Kubernetes CLI (aka kubectl)."}),"\n",(0,a.jsx)(t.p,{children:"This ensures that all business logic is centralized."}),"\n",(0,a.jsx)(t.p,{children:"The BFF (Backend for Frontend) repository is designed to serve as an intermediary layer between the Portal and Kubernetes APIs."}),"\n",(0,a.jsx)(t.h2,{id:"backend",children:"backend"}),"\n",(0,a.jsx)(t.p,{children:"The task of bff (backend for frontend) is to declaratively provide how the graphic elements of krateo-frontend must be enhanced."}),"\n",(0,a.jsx)(t.p,{children:"\ud83d\udc47 Below is an example snippet:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Secret\ntype: Opaque\nmetadata:\n  name: typicode-endpoint\n  namespace: demo-system\nstringData:\n  server-url: https://jsonplaceholder.typicode.com\n---\napiVersion: templates.krateo.io/v1alpha1\nkind: Widget\nmetadata:\n  name: external-api\n  namespace: demo-system\nspec:\n  type: card\n  propsRef:\n    name: card-props\n    namespace: demo-system\n  actions:\n  - template:\n      apiVersion: templates.krateo.io/v1alpha1\n      resource: forms\n      name: fireworksapp\n      namespace: demo-system\n  - template:\n      apiVersion: templates.krateo.io/v1alpha1\n      resource: widgets\n      name: external-api\n      namespace: demo-system\n  app:\n    template:\n      title: ${ .api2.items[0] | (.name  + " -> " + .email) }\n      content: ${ .api2.items[0].body }\n  api:\n  - name: api1\n    path: "/todos/1"\n    endpointRef:\n      name: typicode-endpoint\n      namespace: demo-system\n    verb: GET\n    headers:\n    - \'Accept: application/json\'\n  - name: api2\n    dependOn: api1\n    path: ${ "/todos/" + (.api1.id|tostring) +  "/comments" }\n    endpointRef:\n      name: typicode-endpoint\n      namespace: demo-system\n    verb: GET\n    headers:\n    - \'Accept: application/json\'\n'})}),"\n",(0,a.jsxs)(t.p,{children:["A ",(0,a.jsx)(t.em,{children:"Widget"})," is a Krateo graphic component composed of various properties (",(0,a.jsx)(t.em,{children:"spec.app"})," section)."]}),"\n",(0,a.jsxs)(t.p,{children:["The widget includes call2actions such as deleting the cardTemplate itself (via the trash can button). Any action can be declared under the ",(0,a.jsx)(t.em,{children:"spec.actions"})," section."]}),"\n",(0,a.jsx)(t.p,{children:"Properties can be filled in manually or obtained by querying an API."}),"\n",(0,a.jsx)(t.p,{children:"This API can represent a further call to the Kubernetes server API (and in this case the backend will make a call using the client certificate) or to an external API (and in this case it will use the explicit credentials)."}),"\n",(0,a.jsx)(t.p,{children:"The backend can also make a sequence of API calls and can also iterate an array arrived in response to the call."}),"\n",(0,a.jsxs)(t.p,{children:["Further examples can be found here: ",(0,a.jsx)(t.a,{href:"https://github.com/krateoplatformops/backend/tree/main/testdata",children:"https://github.com/krateoplatformops/backend/tree/main/testdata"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"authn",children:"authn"}),"\n",(0,a.jsxs)(t.p,{children:["Kubernetes can provide different authentication modes (",(0,a.jsx)(t.a,{href:"https://kubernetes.io/docs/reference/access-authn-authz/authentication/#authentication-strategies",children:"https://kubernetes.io/docs/reference/access-authn-authz/authentication/#authentication-strategies"}),"), but two are always present by default: authentication via token or certificate."]}),"\n",(0,a.jsx)(t.p,{children:"The first is theoretically used for access by 'technical' users, while the second is used by 'physical' users. We decided to use the second because it is conceptually more correct."}),"\n",(0,a.jsx)(t.p,{children:"However, we wanted to ensure the user could use their identity provider, so we decided to act as a proxy for external authentication systems."}),"\n",(0,a.jsx)(t.p,{children:"In the case of successful authentication, the authn-service generates a certificate signed with the CA of the Kubernetes cluster. Not only is the entire certificate generated, but the entire kubeconfig, which the user can download to query Krateo directly with the kubectl."}),"\n",(0,a.jsxs)(t.p,{children:["The API ",(0,a.jsx)(t.em,{children:"strategies"})," lists all the authentication strategie configured in the cluster."]}),"\n",(0,a.jsx)(t.p,{children:"Different authentication strategies are currently available:"}),"\n",(0,a.jsx)(t.h3,{id:"basic-authentication",children:"Basic authentication"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",children:'---\napiVersion: v1\nkind: Secret\ntype: kubernetes.io/basic-auth\nmetadata:\n  name: cyberjoker-password\n  namespace: demo-system\nstringData:\n  password: "123456"\n---\napiVersion: basic.authn.krateo.io/v1alpha1\nkind: User\nmetadata:\n  name: cyberjoker\n  namespace: demo-system\nspec:\n  displayName: Cyber Joker\n  avatarURL: https://i.pravatar.cc/256?img=70\n  groups:\n    - devs\n  passwordRef:\n    namespace: demo-system\n    name: cyberjoker-password\n    key: password\n'})}),"\n",(0,a.jsx)(t.h3,{id:"ldap-authentication",children:"LDAP authentication"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",children:'---\napiVersion: v1\nkind: Secret\ntype: kubernetes.io/basic-auth\nmetadata:\n  name: cyberjoker-password\n  namespace: demo-system\nstringData:\n  password: "123456"\n---\napiVersion: basic.authn.krateo.io/v1alpha1\nkind: User\nmetadata:\n  name: cyberjoker\n  namespace: demo-system\nspec:\n  displayName: Cyber Joker\n  avatarURL: https://i.pravatar.cc/256?img=70\n  groups:\n    - devs\n  passwordRef:\n    namespace: demo-system\n    name: cyberjoker-password\n    key: password\n'})}),"\n",(0,a.jsx)(t.h3,{id:"oauth-authentication",children:"Oauth authentication"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'apiVersion: v1\ndata:\n  clientSecret: XX\nkind: Secret\nmetadata:\n  name: github\n  namespace: krateo-system\ntype: Opaque\n---\napiVersion: oauth.authn.krateo.io/v1alpha1\nkind: GithubConfig\nmetadata:\n  name: github-example\nspec:\n  organization: krateoplatformops\n  clientID: "YY"\n  clientSecretRef:\n    name: github\n    namespace: demo-system\n    key: clientSecret\n  authURL: https://github.com/login/oauth/authorize\n  tokenURL: https://github.com/login/oauth/access_token\n  redirectURL: http://localhost:8888/github/grant\n  scopes:\n  - read:user\n  - read:org\n```yaml\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.M)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},2172:(e,t,n)=>{n.d(t,{I:()=>r,M:()=>o});var a=n(1504);const s={},i=a.createContext(s);function o(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);